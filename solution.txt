
<VirtualHost _default_:443>
    ServerName taskbuddy.dev
    ServerAlias www.taskbuddy.dev
    SSLEngine on
    SSLCertificateFile "/opt/bitnami/apache/conf/taskbuddy.dev.crt"
    SSLCertificateKeyFile "/opt/bitnami/apache/conf/taskbuddy.dev.key"
    DocumentRoot "/home/bitnami/htdocs/client/todos-landingpage"
  # BEGIN: Configuration for letsencrypt
  Include "/opt/bitnami/apps/letsencrypt/conf/httpd-prefix.conf"
  # END: Configuration for letsencrypt
  # BEGIN: Support domain renewal when using mod_proxy without Location
  <IfModule mod_proxy.c>
    ProxyPass /.well-known !
  </IfModule>
  # END: Support domain renewal when using mod_proxy without Location
  # BEGIN: Enable www to non-www redirection
  RewriteEngine On
  RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
  RewriteCond %{HTTP_HOST} !^localhost
  RewriteCond %{HTTP_HOST} !^[0-9]+.[0-9]+.[0-9]+.[0-9]+(:[0-9]+)?$
  RewriteCond %{REQUEST_URI} !^/\.well-known
  RewriteRule ^(.*)$ https://%1$1 [R=permanent,L]
  # END: Enable www to non-www redirection
    <Directory "/home/bitnami/htdocs/client/todos-landingpage">
Require all granted
    </Directory>

# Proxy for the frontend (assuming the landing page is served on a different port or doesn't need API proxy)
    ProxyPass / http://localhost:3000/
    ProxyPassReverse / http://localhost:3000/
  # BEGIN: Support domain renewal when using mod_proxy within Location
  <Location /.well-known>
    <IfModule mod_proxy.c>
ProxyPass !
    </IfModule>
  </Location>
  # END: Support domain renewal when using mod_proxy within Location
</VirtualHost>

# app

<VirtualHost _default_:443>
    ServerName app.taskbuddy.dev
    SSLEngine on
    SSLCertificateFile "/opt/bitnami/apache/conf/taskbuddy.dev.crt"
    SSLCertificateKeyFile "/opt/bitnami/apache/conf/taskbuddy.dev.key"
    DocumentRoot "/home/bitnami/htdocs/client/todos-app"
  # BEGIN: Configuration for letsencrypt
  Include "/opt/bitnami/apps/letsencrypt/conf/httpd-prefix.conf"
  # END: Configuration for letsencrypt
  # BEGIN: Support domain renewal when using mod_proxy without Location
  <IfModule mod_proxy.c>
    ProxyPass /.well-known !
  </IfModule>
  # END: Support domain renewal when using mod_proxy without Location
  # BEGIN: Enable www to non-www redirection
  RewriteEngine On
  RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
  RewriteCond %{HTTP_HOST} !^localhost
  RewriteCond %{HTTP_HOST} !^[0-9]+.[0-9]+.[0-9]+.[0-9]+(:[0-9]+)?$
  RewriteCond %{REQUEST_URI} !^/\.well-known
  RewriteRule ^(.*)$ https://%1$1 [R=permanent,L]
  # END: Enable www to non-www redirection
    <Directory "/home/bitnami/htdocs/client/todos-app">
Require all granted
    </Directory>

# Proxy for the frontend
    ProxyPass /api !
    ProxyPass / http://localhost:3001/
    ProxyPassReverse / http://localhost:3001/

# Proxy for the API
    <Location "/api">
Require all granted
ProxyPass http://localhost:8080/api
ProxyPassReverse http://localhost:8080/api
    </Location>
  # BEGIN: Support domain renewal when using mod_proxy within Location
  <Location /.well-known>
    <IfModule mod_proxy.c>
ProxyPass !
    </IfModule>
  </Location>
  # END: Support domain renewal when using mod_proxy within Location
</VirtualHost>


























# Landing page

<VirtualHost _default_:80>
    ServerName taskbuddy.dev
    ServerAlias www.taskbuddy.dev

DocumentRoot "/home/bitnami/htdocs/client/todos-landingpage"
  # BEGIN: Configuration for letsencrypt
  Include "/opt/bitnami/apps/letsencrypt/conf/httpd-prefix.conf"
  # END: Configuration for letsencrypt
  # BEGIN: Support domain renewal when using mod_proxy without Location
  <IfModule mod_proxy.c>
    ProxyPass /.well-known !
  </IfModule>
  # END: Support domain renewal when using mod_proxy without Location
  # BEGIN: Enable HTTP to HTTPS redirection
  RewriteEngine On
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP_HOST} !^localhost
  RewriteCond %{HTTP_HOST} !^[0-9]+.[0-9]+.[0-9]+.[0-9]+(:[0-9]+)?$
  RewriteCond %{REQUEST_URI} !^/\.well-known
  RewriteRule ^/(.*) https://%{SERVER_NAME}/$1 [R,L]
  # END: Enable HTTP to HTTPS redirection
  # BEGIN: Enable www to non-www redirection
  RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
  RewriteCond %{HTTP_HOST} !^localhost
  RewriteCond %{HTTP_HOST} !^[0-9]+.[0-9]+.[0-9]+.[0-9]+(:[0-9]+)?$
  RewriteCond %{REQUEST_URI} !^/\.well-known
  RewriteRule ^(.*)$ http://%1$1 [R=permanent,L]
  # END: Enable www to non-www redirection
    <Directory "/home/bitnami/htdocs/client/todos-landingpage">
Require all granted
    </Directory>

# Proxy for the frontend
    ProxyPass / http://localhost:3000/
    ProxyPassReverse / http://localhost:3000/

  # BEGIN: Support domain renewal when using mod_proxy within Location
  <Location /.well-known>
    <IfModule mod_proxy.c>
ProxyPass !
    </IfModule>
  </Location>
  # END: Support domain renewal when using mod_proxy within Location
  </VirtualHost>

# Main app

<VirtualHost _default_:80>
    ServerName app.taskbuddy.dev
    DocumentRoot "/home/bitnami/htdocs/client/todos-app"
  # BEGIN: Configuration for letsencrypt
  Include "/opt/bitnami/apps/letsencrypt/conf/httpd-prefix.conf"
  # END: Configuration for letsencrypt
  # BEGIN: Support domain renewal when using mod_proxy without Location
  <IfModule mod_proxy.c>
    ProxyPass /.well-known !
  </IfModule>
  # END: Support domain renewal when using mod_proxy without Location
  # BEGIN: Enable HTTP to HTTPS redirection
  RewriteEngine On
  RewriteCond %{HTTPS} !=on
  RewriteCond %{HTTP_HOST} !^localhost
  RewriteCond %{HTTP_HOST} !^[0-9]+.[0-9]+.[0-9]+.[0-9]+(:[0-9]+)?$
  RewriteCond %{REQUEST_URI} !^/\.well-known
  RewriteRule ^/(.*) https://%{SERVER_NAME}/$1 [R,L]
  # END: Enable HTTP to HTTPS redirection
  # BEGIN: Enable www to non-www redirection
  RewriteCond %{HTTP_HOST} ^www\.(.*)$ [NC]
  RewriteCond %{HTTP_HOST} !^localhost
  RewriteCond %{HTTP_HOST} !^[0-9]+.[0-9]+.[0-9]+.[0-9]+(:[0-9]+)?$
  RewriteCond %{REQUEST_URI} !^/\.well-known
  RewriteRule ^(.*)$ http://%1$1 [R=permanent,L]
  # END: Enable www to non-www redirection
    <Directory "/home/bitnami/htdocs/client/todos-app">
Require all granted
    </Directory>

# Proxy for the frontend
    ProxyPass /api !
    ProxyPass / http://localhost:3001/
    ProxyPassReverse / http://localhost:3001/

# Proxy for the API
    <Location "/api">
Require all granted
ProxyPass http://localhost:8080/api
ProxyPassReverse http://localhost:8080/api
    </Location>


# BEGIN: Support domain renewal when using mod_proxy within Location
  <Location /.well-known>
    <IfModule mod_proxy.c>
ProxyPass !
    </IfModule>
  </Location>
  # END: Support domain renewal when using mod_proxy within Location
  </VirtualHost>


<VirtualHost *:80>
    ServerName 16.16.83.161

# Setup proxies as needed for requests to the IP
    ProxyPass /api http://localhost:8080/api
    ProxyPassReverse /api http://localhost:8080/api
</VirtualHost>
~                  